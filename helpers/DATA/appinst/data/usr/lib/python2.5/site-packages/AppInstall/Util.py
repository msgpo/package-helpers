# misc utils
# (c) 2005-2007 Canonical, GPL
# Authors:
#  Michael Vogt

import os

# Column enumeration

# Columns of the categories store
(COL_CAT_NAME,
 COL_CAT_ITEM) = range(0,2)

# Columns of the packages store
(COL_NAME,
 COL_ITEM,
 COL_POPCON) = range(3)


def xmlescape(s):
    from xml.sax.saxutils import escape
    if s==None:
        return ""
    else:
        return escape(s)


def iterate_list_store(store, it):
    """ iterate over a gtk tree-model, returns a gtk.TreeIter for each element
    """
    if not it:
        raise StopIteration
    yield it
    while True:
        it = store.iter_next(it)
        if it == None:
            raise StopIteration
        yield it
    


# class SimpleFilteredCache(apt.cache.FilteredCache):
#     """ a simpler version of the filtered cache that will not react to
#         cache changed (no need, we are only interessted in text)
#     """
#     def filterCachePostChange(self):
#         pass
#     def runFilter(self):
#         self._reapplyFilter()

# class SearchFilter(apt.cache.Filter):
#     """ a filter class that just searchs insensitive in name/description """
#     def SetSearchTerm(self, term):
#         self._term = term.lower()
#     def apply(self, pkg):
#         if self._term in pkg.name.lower() or \
#                self._term in pkg.description.lower():
#             return True
#         else:
#             return False
#     def __init__(self, query=None):
#         if query != None:
#             self.SetSearchTerm(query)



