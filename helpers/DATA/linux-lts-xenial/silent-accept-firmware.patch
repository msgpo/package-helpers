diff -ru source.orig/drivers/base/firmware_class.c source/drivers/base/firmware_class.c
--- source.orig/drivers/base/firmware_class.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/base/firmware_class.c	2016-03-04 16:51:31.376424322 -0600
@@ -90,7 +90,7 @@
 	FW_STATUS_ABORT,
 };
 
-static int loading_timeout = 60;	/* In seconds */
+static int loading_timeout = 5;	/* In seconds */
 
 static inline long firmware_loading_timeout(void)
 {
@@ -353,15 +353,15 @@
 		rc = fw_read_file_contents(file, buf);
 		fput(file);
 		if (rc)
-			dev_warn(device, "firmware, attempted to load %s, but failed with error %d\n",
-				path, rc);
+			dev_warn(device, "firmware, attempted to load, but failed with error %d\n",
+				rc);
 		else
 			break;
 	}
 	__putname(path);
 
 	if (!rc) {
-		dev_dbg(device, "firmware: direct-loading firmware %s\n",
+		dev_dbg(device, "firmware: direct-loading firmware\n",
 			buf->fw_id);
 		mutex_lock(&fw_lock);
 		set_bit(FW_STATUS_DONE, &buf->status);
@@ -936,7 +936,7 @@
 	if (opt_flags & FW_OPT_UEVENT) {
 		buf->need_uevent = true;
 		dev_set_uevent_suppress(f_dev, false);
-		dev_dbg(f_dev, "firmware: requesting %s\n", buf->fw_id);
+		dev_dbg(f_dev, "firmware: requesting\n", buf->fw_id);
 		kobject_uevent(&fw_priv->dev.kobj, KOBJ_ADD);
 	} else {
 		timeout = MAX_JIFFY_OFFSET;
@@ -1051,7 +1051,7 @@
 	}
 
 	if (fw_get_builtin_firmware(firmware, name)) {
-		dev_dbg(device, "firmware: using built-in firmware %s\n", name);
+		dev_dbg(device, "firmware: using built-in firmware\n", name);
 		return 0; /* assigned */
 	}
 
@@ -1133,11 +1133,11 @@
 		goto out;
 
 	ret = 0;
-	timeout = firmware_loading_timeout();
+	timeout = is_nonfree_firmware(name) ? 1 : firmware_loading_timeout();
 	if (opt_flags & FW_OPT_NOWAIT) {
 		timeout = usermodehelper_read_lock_wait(timeout);
 		if (!timeout) {
-			dev_dbg(device, "firmware: %s loading timed out\n",
+			dev_dbg(device, "firmware: loading timed out\n",
 				name);
 			ret = -EBUSY;
 			goto out;
@@ -1145,7 +1145,7 @@
 	} else {
 		ret = usermodehelper_read_trylock();
 		if (WARN_ON(ret)) {
-			dev_err(device, "firmware: %s will not be loaded\n",
+			dev_err(device, "firmware: will not be loaded\n",
 				name);
 			goto out;
 		}
@@ -1155,12 +1155,13 @@
 	if (ret) {
 		if (!(opt_flags & FW_OPT_NO_WARN))
 			dev_warn(device,
-				 "Direct firmware load for %s failed with error %d\n",
-				 name, ret);
+				 "Direct firmware load failed with error %d\n",
+				 ret);
 		if (opt_flags & FW_OPT_USERHELPER) {
 			dev_warn(device, "Falling back to user helper\n");
 			ret = fw_load_from_user_helper(fw, name, device,
 						       opt_flags, timeout);
+                        dev_warn(device, "Please read https://www.gnu.org/distros/free-system-distribution-guidelines.html#nonfree-firmware\n");
 		}
 	}
 
diff -ru source.orig/drivers/gpu/drm/radeon/cik.c source/drivers/gpu/drm/radeon/cik.c
--- source.orig/drivers/gpu/drm/radeon/cik.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/gpu/drm/radeon/cik.c	2016-03-04 16:54:53.164424298 -0600
@@ -2069,8 +2069,8 @@
 			goto out;
 		if (rdev->pfp_fw->size != pfp_req_size) {
 			printk(KERN_ERR
-			       "cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->pfp_fw->size, fw_name);
+			       "cik_cp: Bogus length %zu in firmware\n",
+			       rdev->pfp_fw->size);
 			err = -EINVAL;
 			goto out;
 		}
@@ -2078,7 +2078,7 @@
 		err = radeon_ucode_validate(rdev->pfp_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "cik_fw: validation failed for firmware \"%s\"\n",
+			       "cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2095,15 +2095,15 @@
 			goto out;
 		if (rdev->me_fw->size != me_req_size) {
 			printk(KERN_ERR
-			       "cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->me_fw->size, fw_name);
+			       "cik_cp: Bogus length %zu in firmware\n",
+			       rdev->me_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->me_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "cik_fw: validation failed for firmware \"%s\"\n",
+			       "cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2120,15 +2120,15 @@
 			goto out;
 		if (rdev->ce_fw->size != ce_req_size) {
 			printk(KERN_ERR
-			       "cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->ce_fw->size, fw_name);
+			       "cik_cp: Bogus length %zu in firmware\n",
+			       rdev->ce_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->ce_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "cik_fw: validation failed for firmware \"%s\"\n",
+			       "cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2145,15 +2145,15 @@
 			goto out;
 		if (rdev->mec_fw->size != mec_req_size) {
 			printk(KERN_ERR
-			       "cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->mec_fw->size, fw_name);
+			       "cik_cp: Bogus length %zu in firmware\n",
+			       rdev->mec_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->mec_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "cik_fw: validation failed for firmware \"%s\"\n",
+			       "cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2185,15 +2185,15 @@
 			goto out;
 		if (rdev->rlc_fw->size != rlc_req_size) {
 			printk(KERN_ERR
-			       "cik_rlc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->rlc_fw->size, fw_name);
+			       "cik_rlc: Bogus length %zu in firmware\n",
+			       rdev->rlc_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->rlc_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "cik_fw: validation failed for firmware \"%s\"\n",
+			       "cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2210,15 +2210,15 @@
 			goto out;
 		if (rdev->sdma_fw->size != sdma_req_size) {
 			printk(KERN_ERR
-			       "cik_sdma: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->sdma_fw->size, fw_name);
+			       "cik_sdma: Bogus length %zu in firmware\n",
+			       rdev->sdma_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->sdma_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "cik_fw: validation failed for firmware \"%s\"\n",
+			       "cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2242,8 +2242,8 @@
 			if ((rdev->mc_fw->size != mc_req_size) &&
 			    (rdev->mc_fw->size != mc2_req_size)){
 				printk(KERN_ERR
-				       "cik_mc: Bogus length %zu in firmware \"%s\"\n",
-				       rdev->mc_fw->size, fw_name);
+				       "cik_mc: Bogus length %zu in firmware\n",
+				       rdev->mc_fw->size);
 				err = -EINVAL;
 			}
 			DRM_INFO("%s: %zu bytes\n", fw_name, rdev->mc_fw->size);
@@ -2251,7 +2251,7 @@
 			err = radeon_ucode_validate(rdev->mc_fw);
 			if (err) {
 				printk(KERN_ERR
-				       "cik_fw: validation failed for firmware \"%s\"\n",
+				       "cik_fw: validation failed for firmware\n",
 				       fw_name);
 				goto out;
 			} else {
@@ -2266,22 +2266,22 @@
 			err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 			if (err) {
 				printk(KERN_ERR
-				       "smc: error loading firmware \"%s\"\n",
+				       "smc: error loading firmware\n",
 				       fw_name);
 				release_firmware(rdev->smc_fw);
 				rdev->smc_fw = NULL;
 				err = 0;
 			} else if (rdev->smc_fw->size != smc_req_size) {
 				printk(KERN_ERR
-				       "cik_smc: Bogus length %zu in firmware \"%s\"\n",
-				       rdev->smc_fw->size, fw_name);
+				       "cik_smc: Bogus length %zu in firmware\n",
+				       rdev->smc_fw->size);
 				err = -EINVAL;
 			}
 		} else {
 			err = radeon_ucode_validate(rdev->smc_fw);
 			if (err) {
 				printk(KERN_ERR
-				       "cik_fw: validation failed for firmware \"%s\"\n",
+				       "cik_fw: validation failed for firmware\n",
 				       fw_name);
 				goto out;
 			} else {
@@ -2303,7 +2303,7 @@
 	if (err) {
 		if (err != -EINVAL)
 			printk(KERN_ERR
-			       "cik_cp: Failed to load firmware \"%s\"\n",
+			       "cik_cp: Failed to load firmware\n",
 			       fw_name);
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
diff -ru source.orig/drivers/gpu/drm/radeon/ni.c source/drivers/gpu/drm/radeon/ni.c
--- source.orig/drivers/gpu/drm/radeon/ni.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/gpu/drm/radeon/ni.c	2016-03-04 16:57:08.956424282 -0600
@@ -775,8 +775,8 @@
 		goto out;
 	if (rdev->pfp_fw->size != pfp_req_size) {
 		printk(KERN_ERR
-		       "ni_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->pfp_fw->size, fw_name);
+		       "ni_cp: Bogus length %zu in firmware\n",
+		       rdev->pfp_fw->size);
 		err = -EINVAL;
 		goto out;
 	}
@@ -787,8 +787,8 @@
 		goto out;
 	if (rdev->me_fw->size != me_req_size) {
 		printk(KERN_ERR
-		       "ni_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->me_fw->size, fw_name);
+		       "ni_cp: Bogus length %zu in firmware\n",
+		       rdev->me_fw->size);
 		err = -EINVAL;
 	}
 
@@ -798,8 +798,8 @@
 		goto out;
 	if (rdev->rlc_fw->size != rlc_req_size) {
 		printk(KERN_ERR
-		       "ni_rlc: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->rlc_fw->size, fw_name);
+		       "ni_rlc: Bogus length %zu in firmware\n",
+		       rdev->rlc_fw->size);
 		err = -EINVAL;
 	}
 
@@ -811,8 +811,8 @@
 			goto out;
 		if (rdev->mc_fw->size != mc_req_size) {
 			printk(KERN_ERR
-			       "ni_mc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->mc_fw->size, fw_name);
+			       "ni_mc: Bogus length %zu in firmware\n",
+			       rdev->mc_fw->size);
 			err = -EINVAL;
 		}
 	}
@@ -822,15 +822,15 @@
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
 			printk(KERN_ERR
-			       "smc: error loading firmware \"%s\"\n",
+			       "smc: error loading firmware\n",
 			       fw_name);
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
 			printk(KERN_ERR
-			       "ni_mc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->mc_fw->size, fw_name);
+			       "ni_mc: Bogus length %zu in firmware\n",
+			       rdev->mc_fw->size);
 			err = -EINVAL;
 		}
 	}
@@ -839,7 +839,7 @@
 	if (err) {
 		if (err != -EINVAL)
 			printk(KERN_ERR
-			       "ni_cp: Failed to load firmware \"%s\"\n",
+			       "ni_cp: Failed to load firmware\n",
 			       fw_name);
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
diff -ru source.orig/drivers/gpu/drm/radeon/r100.c source/drivers/gpu/drm/radeon/r100.c
--- source.orig/drivers/gpu/drm/radeon/r100.c	2016-03-04 16:51:09.000000000 -0600
+++ source/drivers/gpu/drm/radeon/r100.c	2016-03-08 09:41:58.952386158 -0600
@@ -1040,12 +1040,12 @@
 
 	err = request_firmware(&rdev->me_fw, fw_name, rdev->dev);
 	if (err) {
-		printk(KERN_ERR "radeon_cp: Failed to load firmware \"%s\"\n",
+		printk(KERN_ERR "radeon_cp: Failed to load firmware\n",
 		       fw_name);
 	} else if (rdev->me_fw->size % 8) {
 		printk(KERN_ERR
-		       "radeon_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->me_fw->size, fw_name);
+		       "radeon_cp: Bogus length %zu in firmware\n",
+		       rdev->me_fw->size);
 		err = -EINVAL;
 		release_firmware(rdev->me_fw);
 		rdev->me_fw = NULL;
diff -ru source.orig/drivers/gpu/drm/radeon/r600.c source/drivers/gpu/drm/radeon/r600.c
--- source.orig/drivers/gpu/drm/radeon/r600.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/gpu/drm/radeon/r600.c	2016-03-08 09:43:28.344386147 -0600
@@ -2544,8 +2544,8 @@
 		goto out;
 	if (rdev->pfp_fw->size != pfp_req_size) {
 		printk(KERN_ERR
-		       "r600_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->pfp_fw->size, fw_name);
+		       "r600_cp: Bogus length %zu in firmware\n",
+		       rdev->pfp_fw->size);
 		err = -EINVAL;
 		goto out;
 	}
@@ -2556,8 +2556,8 @@
 		goto out;
 	if (rdev->me_fw->size != me_req_size) {
 		printk(KERN_ERR
-		       "r600_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->me_fw->size, fw_name);
+		       "r600_cp: Bogus length %zu in firmware\n",
+		       rdev->me_fw->size);
 		err = -EINVAL;
 	}
 
@@ -2567,8 +2567,8 @@
 		goto out;
 	if (rdev->rlc_fw->size != rlc_req_size) {
 		printk(KERN_ERR
-		       "r600_rlc: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->rlc_fw->size, fw_name);
+		       "r600_rlc: Bogus length %zu in firmware\n",
+		       rdev->rlc_fw->size);
 		err = -EINVAL;
 	}
 
@@ -2577,15 +2577,15 @@
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
 			printk(KERN_ERR
-			       "smc: error loading firmware \"%s\"\n",
+			       "smc: error loading firmware\n",
 			       fw_name);
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
 			printk(KERN_ERR
-			       "smc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->smc_fw->size, fw_name);
+			       "smc: Bogus length %zu in firmware \n",
+			       rdev->smc_fw->size);
 			err = -EINVAL;
 		}
 	}
@@ -2594,7 +2594,7 @@
 	if (err) {
 		if (err != -EINVAL)
 			printk(KERN_ERR
-			       "r600_cp: Failed to load firmware \"%s\"\n",
+			       "r600_cp: Failed to load firmware\n",
 			       fw_name);
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
diff -ru source.orig/drivers/gpu/drm/radeon/r600_cp.c source/drivers/gpu/drm/radeon/r600_cp.c
--- source.orig/drivers/gpu/drm/radeon/r600_cp.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/gpu/drm/radeon/r600_cp.c	2016-03-08 09:44:43.408386138 -0600
@@ -356,8 +356,8 @@
 		goto out;
 	if (dev_priv->pfp_fw->size != pfp_req_size) {
 		printk(KERN_ERR
-		       "r600_cp: Bogus length %zu in firmware \"%s\"\n",
-		       dev_priv->pfp_fw->size, fw_name);
+		       "r600_cp: Bogus length %zu in firmware\n",
+		       dev_priv->pfp_fw->size);
 		err = -EINVAL;
 		goto out;
 	}
@@ -368,8 +368,8 @@
 		goto out;
 	if (dev_priv->me_fw->size != me_req_size) {
 		printk(KERN_ERR
-		       "r600_cp: Bogus length %zu in firmware \"%s\"\n",
-		       dev_priv->me_fw->size, fw_name);
+		       "r600_cp: Bogus length %zu in firmware \n",
+		       dev_priv->me_fw->size);
 		err = -EINVAL;
 	}
 out:
@@ -378,7 +378,7 @@
 	if (err) {
 		if (err != -EINVAL)
 			printk(KERN_ERR
-			       "r600_cp: Failed to load firmware \"%s\"\n",
+			       "r600_cp: Failed to load firmware \n",
 			       fw_name);
 		release_firmware(dev_priv->pfp_fw);
 		dev_priv->pfp_fw = NULL;
diff -ru source.orig/drivers/gpu/drm/radeon/radeon_cp.c source/drivers/gpu/drm/radeon/radeon_cp.c
--- source.orig/drivers/gpu/drm/radeon/radeon_cp.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/gpu/drm/radeon/radeon_cp.c	2016-03-08 09:45:48.968386130 -0600
@@ -531,12 +531,12 @@
 	err = request_firmware(&dev_priv->me_fw, fw_name, &pdev->dev);
 	platform_device_unregister(pdev);
 	if (err) {
-		printk(KERN_ERR "radeon_cp: Failed to load firmware \"%s\"\n",
+		printk(KERN_ERR "radeon_cp: Failed to load firmware\n",
 		       fw_name);
 	} else if (dev_priv->me_fw->size % 8) {
 		printk(KERN_ERR
-		       "radeon_cp: Bogus length %zu in firmware \"%s\"\n",
-		       dev_priv->me_fw->size, fw_name);
+		       "radeon_cp: Bogus length %zu in firmware\n",
+		       dev_priv->me_fw->size);
 		err = -EINVAL;
 		release_firmware(dev_priv->me_fw);
 		dev_priv->me_fw = NULL;
diff -ru source.orig/drivers/gpu/drm/radeon/radeon_uvd.c source/drivers/gpu/drm/radeon/radeon_uvd.c
--- source.orig/drivers/gpu/drm/radeon/radeon_uvd.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/gpu/drm/radeon/radeon_uvd.c	2016-03-08 09:46:31.432386125 -0600
@@ -132,7 +132,7 @@
 
 	r = request_firmware(&rdev->uvd_fw, fw_name, rdev->dev);
 	if (r) {
-		dev_err(rdev->dev, "radeon_uvd: Can't load firmware \"%s\"\n",
+		dev_err(rdev->dev, "radeon_uvd: Can't load firmware\n",
 			fw_name);
 		return r;
 	}
diff -ru source.orig/drivers/gpu/drm/radeon/si.c source/drivers/gpu/drm/radeon/si.c
--- source.orig/drivers/gpu/drm/radeon/si.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/gpu/drm/radeon/si.c	2016-03-08 09:49:55.944386101 -0600
@@ -1724,8 +1724,8 @@
 			goto out;
 		if (rdev->pfp_fw->size != pfp_req_size) {
 			printk(KERN_ERR
-			       "si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->pfp_fw->size, fw_name);
+			       "si_cp: Bogus length %zu in firmware\n",
+			       rdev->pfp_fw->size);
 			err = -EINVAL;
 			goto out;
 		}
@@ -1733,7 +1733,7 @@
 		err = radeon_ucode_validate(rdev->pfp_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "si_cp: validation failed for firmware \"%s\"\n",
+			       "si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1750,15 +1750,15 @@
 			goto out;
 		if (rdev->me_fw->size != me_req_size) {
 			printk(KERN_ERR
-			       "si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->me_fw->size, fw_name);
+			       "si_cp: Bogus length %zu in firmware\n",
+			       rdev->me_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->me_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "si_cp: validation failed for firmware \"%s\"\n",
+			       "si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1775,15 +1775,15 @@
 			goto out;
 		if (rdev->ce_fw->size != ce_req_size) {
 			printk(KERN_ERR
-			       "si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->ce_fw->size, fw_name);
+			       "si_cp: Bogus length %zu in firmware\n",
+			       rdev->ce_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->ce_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "si_cp: validation failed for firmware \"%s\"\n",
+			       "si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1800,15 +1800,15 @@
 			goto out;
 		if (rdev->rlc_fw->size != rlc_req_size) {
 			printk(KERN_ERR
-			       "si_rlc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->rlc_fw->size, fw_name);
+			       "si_rlc: Bogus length %zu in firmware\n",
+			       rdev->rlc_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->rlc_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "si_cp: validation failed for firmware \"%s\"\n",
+			       "si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1830,8 +1830,8 @@
 		if ((rdev->mc_fw->size != mc_req_size) &&
 		    (rdev->mc_fw->size != mc2_req_size)) {
 			printk(KERN_ERR
-			       "si_mc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->mc_fw->size, fw_name);
+			       "si_mc: Bogus length %zu in firmware\n",
+			       rdev->mc_fw->size);
 			err = -EINVAL;
 		}
 		DRM_INFO("%s: %zu bytes\n", fw_name, rdev->mc_fw->size);
@@ -1839,7 +1839,7 @@
 		err = radeon_ucode_validate(rdev->mc_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "si_cp: validation failed for firmware \"%s\"\n",
+			       "si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1854,22 +1854,22 @@
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
 			printk(KERN_ERR
-			       "smc: error loading firmware \"%s\"\n",
+			       "smc: error loading firmware\n",
 			       fw_name);
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
 			printk(KERN_ERR
-			       "si_smc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->smc_fw->size, fw_name);
+			       "si_smc: Bogus length %zu in firmware\n",
+			       rdev->smc_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->smc_fw);
 		if (err) {
 			printk(KERN_ERR
-			       "si_cp: validation failed for firmware \"%s\"\n",
+			       "si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1889,7 +1889,7 @@
 	if (err) {
 		if (err != -EINVAL)
 			printk(KERN_ERR
-			       "si_cp: Failed to load firmware \"%s\"\n",
+			       "si_cp: Failed to load firmware\n",
 			       fw_name);
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
diff -ru source.orig/drivers/net/wireless/ipw2x00/ipw2200.c source/drivers/net/wireless/ipw2x00/ipw2200.c
--- source.orig/drivers/net/wireless/ipw2x00/ipw2200.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/net/wireless/ipw2x00/ipw2200.c	2016-03-08 09:56:39.896386053 -0600
@@ -3419,12 +3419,12 @@
 	/* ask firmware_class module to get the boot firmware off disk */
 	rc = request_firmware(raw, name, &priv->pci_dev->dev);
 	if (rc < 0) {
-		IPW_ERROR("%s request_firmware failed: Reason %d\n", name, rc);
+		IPW_ERROR("request_firmware failed: Reason %d\n", rc);
 		return rc;
 	}
 
 	if ((*raw)->size < sizeof(*fw)) {
-		IPW_ERROR("%s is too small (%zd)\n", name, (*raw)->size);
+		IPW_ERROR("Firmware file is too small (%zd)\n", (*raw)->size);
 		return -EINVAL;
 	}
 
@@ -3432,13 +3432,12 @@
 
 	if ((*raw)->size < sizeof(*fw) + le32_to_cpu(fw->boot_size) +
 	    le32_to_cpu(fw->ucode_size) + le32_to_cpu(fw->fw_size)) {
-		IPW_ERROR("%s is too small or corrupt (%zd)\n",
-			  name, (*raw)->size);
+		IPW_ERROR("Firmware file is too small or corrupt (%zd)\n",
+			  (*raw)->size);
 		return -EINVAL;
 	}
 
-	IPW_DEBUG_INFO("Read firmware '%s' image v%d.%d (%zd bytes)\n",
-		       name,
+	IPW_DEBUG_INFO("Read firmware image v%d.%d (%zd bytes)\n",
 		       le32_to_cpu(fw->ver) >> 16,
 		       le32_to_cpu(fw->ver) & 0xff,
 		       (*raw)->size - sizeof(*fw));
@@ -3574,7 +3573,7 @@
 	/* DMA the initial boot firmware into the device */
 	rc = ipw_load_firmware(priv, boot_img, le32_to_cpu(fw->boot_size));
 	if (rc < 0) {
-		IPW_ERROR("Unable to load boot firmware: %d\n", rc);
+		IPW_ERROR("Unable to load boot firmware\n", rc);
 		goto error;
 	}
 
@@ -3606,7 +3605,7 @@
 	/* DMA bss firmware into the device */
 	rc = ipw_load_firmware(priv, fw_img, le32_to_cpu(fw->fw_size));
 	if (rc < 0) {
-		IPW_ERROR("Unable to load firmware: %d\n", rc);
+		IPW_ERROR("Unable to load firmware\n", rc);
 		goto error;
 	}
 #ifdef CONFIG_PM
@@ -11217,7 +11216,7 @@
 		 * Also start the clocks. */
 		rc = ipw_load(priv);
 		if (rc) {
-			IPW_ERROR("Unable to load firmware: %d\n", rc);
+			IPW_ERROR("Unable to load firmware\n", rc);
 			return rc;
 		}
 
diff -ru source.orig/drivers/net/wireless/iwlwifi/iwl-drv.c source/drivers/net/wireless/iwlwifi/iwl-drv.c
--- source.orig/drivers/net/wireless/iwlwifi/iwl-drv.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/net/wireless/iwlwifi/iwl-drv.c	2016-03-11 09:58:11.620355112 -0600
@@ -247,7 +247,7 @@
 			 "%s%c-%s.ucode", name_pre, rev_step, tag);
 	}
 
-	IWL_DEBUG_INFO(drv, "attempting to load firmware %s'%s'\n",
+	IWL_DEBUG_INFO(drv, "attempting to load firmware\n",
 		       (drv->fw_index == UCODE_EXPERIMENTAL_INDEX)
 				? "EXPERIMENTAL " : "",
 		       drv->firmware_name);
@@ -1204,7 +1204,7 @@
 	if (!ucode_raw) {
 		if (drv->fw_index <= api_ok)
 			IWL_ERR(drv,
-				"request for firmware file '%s' failed.\n",
+				"request for firmware file failed.\n",
 				drv->firmware_name);
 		goto try_again;
 	}
@@ -1259,8 +1259,6 @@
 				IWL_ERR(drv, "Firmware has old API version, "
 					"expected v%u, got v%u.\n",
 					api_max, api_ver);
-			IWL_ERR(drv, "New firmware can be obtained from "
-				      "http://www.intellinuxwireless.org/.\n");
 		}
 	}
 
diff -ru source.orig/drivers/net/wireless/iwlwifi/mvm/nvm.c source/drivers/net/wireless/iwlwifi/mvm/nvm.c
--- source.orig/drivers/net/wireless/iwlwifi/mvm/nvm.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/net/wireless/iwlwifi/mvm/nvm.c	2016-03-11 09:59:20.872355103 -0600
@@ -382,7 +382,7 @@
 	ret = request_firmware(&fw_entry, mvm->nvm_file_name,
 			       mvm->trans->dev);
 	if (ret) {
-		IWL_ERR(mvm, "ERROR: %s isn't available %d\n",
+		IWL_ERR(mvm, "ERROR: firmware isn't available %d\n",
 			mvm->nvm_file_name, ret);
 		return ret;
 	}
diff -ru source.orig/drivers/net/wireless/realtek/rtlwifi/core.c source/drivers/net/wireless/realtek/rtlwifi/core.c
--- source.orig/drivers/net/wireless/realtek/rtlwifi/core.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/net/wireless/realtek/rtlwifi/core.c	2016-03-11 10:06:19.848355053 -0600
@@ -110,12 +110,12 @@
 			err = request_firmware(&firmware,
 					       rtlpriv->cfg->alt_fw_name,
 					       rtlpriv->io.dev);
-			pr_info("Loading alternative firmware %s\n",
+			pr_info("Loading alternative firmware\n",
 				rtlpriv->cfg->alt_fw_name);
 			if (!err)
 				goto found_alt;
 		}
-		pr_err("Firmware %s not available\n", rtlpriv->cfg->fw_name);
+		pr_err("Firmware not available\n", rtlpriv->cfg->fw_name);
 		rtlpriv->max_fw_size = 0;
 		return;
 	}
diff -ru source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c source/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c
--- source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c	2016-03-11 10:07:16.844355047 -0600
@@ -168,7 +168,7 @@
 
 	rtlpriv->cfg->fw_name = "rtlwifi/rtl8188efw.bin";
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", rtlpriv->cfg->fw_name);
+	pr_info("Requesting firmware\n", rtlpriv->cfg->fw_name);
 	err = request_firmware_nowait(THIS_MODULE, 1, rtlpriv->cfg->fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c source/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c
--- source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c	2016-03-11 10:07:52.720355042 -0600
@@ -172,7 +172,7 @@
 		rtlpriv->cfg->fw_name = "rtlwifi/rtl8192cfwU_B.bin";
 
 	rtlpriv->max_fw_size = 0x4000;
-	pr_info("Using firmware %s\n", rtlpriv->cfg->fw_name);
+	pr_info("Requesting firmware\n", rtlpriv->cfg->fw_name);
 	err = request_firmware_nowait(THIS_MODULE, 1, rtlpriv->cfg->fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c source/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c
--- source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c	2016-03-11 10:08:12.288355040 -0600
@@ -83,7 +83,7 @@
 	}
 	/* provide name of alternative file */
 	rtlpriv->cfg->alt_fw_name = "rtlwifi/rtl8192cufw.bin";
-	pr_info("Loading firmware %s\n", rtlpriv->cfg->fw_name);
+	pr_info("Requesting firmware\n", rtlpriv->cfg->fw_name);
 	rtlpriv->max_fw_size = 0x4000;
 	err = request_firmware_nowait(THIS_MODULE, 1,
 				      rtlpriv->cfg->fw_name, rtlpriv->io.dev,
diff -ru source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c source/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c
--- source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c	2016-03-11 10:09:02.532355034 -0600
@@ -181,7 +181,7 @@
 
 	rtlpriv->max_fw_size = 0x8000;
 	pr_info("Driver for Realtek RTL8192DE WLAN interface\n");
-	pr_info("Loading firmware file %s\n", rtlpriv->cfg->fw_name);
+	pr_info("Loading firmware file\n", rtlpriv->cfg->fw_name);
 
 	/* request fw */
 	err = request_firmware_nowait(THIS_MODULE, 1, rtlpriv->cfg->fw_name,
diff -ru source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c source/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c
--- source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c	2016-03-11 10:09:59.548355027 -0600
@@ -94,7 +94,7 @@
 			 "Firmware callback routine entered!\n");
 	complete(&rtlpriv->firmware_loading_complete);
 	if (!firmware) {
-		pr_err("Firmware %s not available\n", rtlpriv->cfg->fw_name);
+		pr_err("Firmware not available\n", rtlpriv->cfg->fw_name);
 		rtlpriv->max_fw_size = 0;
 		return;
 	}
@@ -212,7 +212,7 @@
 	rtlpriv->max_fw_size = RTL8190_MAX_FIRMWARE_CODE_SIZE*2 +
 			       sizeof(struct fw_hdr);
 	pr_info("Driver for Realtek RTL8192SE/RTL8191SE\n"
-		"Loading firmware %s\n", rtlpriv->cfg->fw_name);
+		"Loading firmware\n", rtlpriv->cfg->fw_name);
 	/* request fw */
 	err = request_firmware_nowait(THIS_MODULE, 1, rtlpriv->cfg->fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
diff -ru source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c source/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c
--- source.orig/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c	2016-01-10 17:01:32.000000000 -0600
+++ source/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c	2016-03-11 10:13:32.548355002 -0600
@@ -177,7 +177,7 @@
 		rtlpriv->cfg->fw_name = "rtlwifi/rtl8723fw_B.bin";
 
 	rtlpriv->max_fw_size = 0x6000;
-	pr_info("Using firmware %s\n", rtlpriv->cfg->fw_name);
+	pr_info("Requesting firmware\n", rtlpriv->cfg->fw_name);
 	err = request_firmware_nowait(THIS_MODULE, 1, rtlpriv->cfg->fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c source/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c	2016-08-05 19:32:13.085470325 +0000
@@ -754,7 +754,7 @@
 
 		err = amdgpu_ucode_validate(adev->pm.fw);
 		if (err) {
-			DRM_ERROR("Failed to load firmware \"%s\"", fw_name);
+			DRM_ERROR("Failed to load firmware\n", fw_name);
 			release_firmware(adev->pm.fw);
 			adev->pm.fw = NULL;
 			return err;
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c source/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c	2016-08-05 19:36:24.485470295 +0000
@@ -135,7 +135,7 @@
 
 	r = request_firmware(&adev->uvd.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_uvd: Can't load firmware \"%s\"\n",
+		dev_err(adev->dev, "amdgpu_uvd: Can't load firmware\n",
 			fw_name);
 		return r;
 	}
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c source/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c	2016-08-05 19:35:59.541470298 +0000
@@ -118,7 +118,7 @@
 
 	r = request_firmware(&adev->vce.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vce: Can't load firmware \"%s\"\n",
+		dev_err(adev->dev, "amdgpu_vce: Can't load firmware\n",
 			fw_name);
 		return r;
 	}
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/ci_dpm.c source/drivers/gpu/drm/amd/amdgpu/ci_dpm.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/ci_dpm.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/ci_dpm.c	2016-08-05 19:32:41.457470322 +0000
@@ -5819,7 +5819,7 @@
 out:
 	if (err) {
 		printk(KERN_ERR
-		       "cik_smc: Failed to load firmware \"%s\"\n",
+		       "cik_smc: Failed to load firmware\n",
 		       fw_name);
 		release_firmware(adev->pm.fw);
 		adev->pm.fw = NULL;
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/cik_sdma.c source/drivers/gpu/drm/amd/amdgpu/cik_sdma.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/cik_sdma.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/cik_sdma.c	2016-08-05 19:33:02.493470320 +0000
@@ -132,7 +132,7 @@
 out:
 	if (err) {
 		printk(KERN_ERR
-		       "cik_sdma: Failed to load firmware \"%s\"\n",
+		       "cik_sdma: Failed to load firmware\n",
 		       fw_name);
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/fiji_dpm.c source/drivers/gpu/drm/amd/amdgpu/fiji_dpm.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/fiji_dpm.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/fiji_dpm.c	2016-08-05 19:33:22.033470317 +0000
@@ -51,7 +51,7 @@
 
 out:
 	if (err) {
-		DRM_ERROR("Failed to load firmware \"%s\"", fw_name);
+		DRM_ERROR("Failed to load firmware\n", fw_name);
 		release_firmware(adev->pm.fw);
 		adev->pm.fw = NULL;
 	}
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c source/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c	2016-08-05 19:33:36.901470315 +0000
@@ -975,7 +975,7 @@
 out:
 	if (err) {
 		printk(KERN_ERR
-		       "gfx7: Failed to load firmware \"%s\"\n",
+		       "gfx7: Failed to load firmware\n",
 		       fw_name);
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c source/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c	2016-08-05 19:30:22.917470339 +0000
@@ -897,7 +897,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx8: Failed to load firmware \"%s\"\n",
+			"gfx8: Failed to load firmware\n",
 			fw_name);
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c source/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c	2016-08-05 19:33:49.385470314 +0000
@@ -184,7 +184,7 @@
 out:
 	if (err) {
 		printk(KERN_ERR
-		       "cik_mc: Failed to load firmware \"%s\"\n",
+		       "cik_mc: Failed to load firmware\n",
 		       fw_name);
 		release_firmware(adev->mc.fw);
 		adev->mc.fw = NULL;
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c source/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c	2016-08-05 19:33:58.985470313 +0000
@@ -225,7 +225,7 @@
 out:
 	if (err) {
 		printk(KERN_ERR
-		       "mc: Failed to load firmware \"%s\"\n",
+		       "mc: Failed to load firmware\n",
 		       fw_name);
 		release_firmware(adev->mc.fw);
 		adev->mc.fw = NULL;
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/iceland_dpm.c source/drivers/gpu/drm/amd/amdgpu/iceland_dpm.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/iceland_dpm.c	2016-01-10 23:01:32.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/iceland_dpm.c	2016-08-05 19:34:21.509470310 +0000
@@ -51,7 +51,7 @@
 
 out:
 	if (err) {
-		DRM_ERROR("Failed to load firmware \"%s\"", fw_name);
+		DRM_ERROR("Failed to load firmware\n", fw_name);
 		release_firmware(adev->pm.fw);
 		adev->pm.fw = NULL;
 	}
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c source/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c	2016-08-05 19:34:34.061470309 +0000
@@ -162,7 +162,7 @@
 out:
 	if (err) {
 		printk(KERN_ERR
-		       "sdma_v2_4: Failed to load firmware \"%s\"\n",
+		       "sdma_v2_4: Failed to load firmware\n",
 		       fw_name);
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c source/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c	2016-08-05 19:34:46.729470307 +0000
@@ -258,7 +258,7 @@
 out:
 	if (err) {
 		printk(KERN_ERR
-		       "sdma_v3_0: Failed to load firmware \"%s\"\n",
+		       "sdma_v3_0: Failed to load firmware\n",
 		       fw_name);
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
diff -ru source.orig/drivers/gpu/drm/amd/amdgpu/tonga_dpm.c source/drivers/gpu/drm/amd/amdgpu/tonga_dpm.c
--- source.orig/drivers/gpu/drm/amd/amdgpu/tonga_dpm.c	2016-08-05 19:27:30.000000000 +0000
+++ source/drivers/gpu/drm/amd/amdgpu/tonga_dpm.c	2016-08-05 19:34:59.469470306 +0000
@@ -50,7 +50,7 @@
 
 out:
 	if (err) {
-		DRM_ERROR("Failed to load firmware \"%s\"", fw_name);
+		DRM_ERROR("Failed to load firmware\n", fw_name);
 		release_firmware(adev->pm.fw);
 		adev->pm.fw = NULL;
 	}
diff -ru source.orig/drivers/net/wireless/iwlegacy/3945-mac.c source/drivers/net/wireless/iwlegacy/3945-mac.c
--- source.orig/drivers/net/wireless/iwlegacy/3945-mac.c	2016-01-10 23:01:32.000000000 +0000
+++ source/drivers/net/wireless/iwlegacy/3945-mac.c	2016-08-05 21:43:05.861469388 +0000
@@ -1861,7 +1861,7 @@
 		sprintf(buf, "%s%u%s", name_pre, idx, ".ucode");
 		ret = request_firmware(&ucode_raw, buf, &il->pci_dev->dev);
 		if (ret < 0) {
-			IL_ERR("%s firmware file req failed: %d\n", buf, ret);
+			IL_ERR("Firmware file req failed\n", buf, ret);
 			if (ret == -ENOENT)
 				continue;
 			else
@@ -1870,7 +1870,7 @@
 			if (idx < api_max)
 				IL_ERR("Loaded firmware %s, "
 				       "which is deprecated. "
-				       " Please use API v%u instead.\n", buf,
+				       "\n", buf,
 				       api_max);
 			D_INFO("Got firmware '%s' file "
 			       "(%zd bytes) from disk\n", buf, ucode_raw->size);
@@ -1906,16 +1906,14 @@
 
 	if (api_ver < api_min || api_ver > api_max) {
 		IL_ERR("Driver unable to support your firmware API. "
-		       "Driver supports v%u, firmware is v%u.\n", api_max,
+		       "\n", api_max,
 		       api_ver);
 		il->ucode_ver = 0;
 		ret = -EINVAL;
 		goto err_release;
 	}
 	if (api_ver != api_max)
-		IL_ERR("Firmware has old API version. Expected %u, "
-		       "got %u. New firmware can be obtained "
-		       "from http://www.intellinuxwireless.org.\n", api_max,
+		IL_ERR("Firmware has old API version\n", api_max,
 		       api_ver);
 
 	IL_INFO("loaded firmware version %u.%u.%u.%u\n",
diff -ru source.orig/drivers/net/wireless/iwlegacy/4965-mac.c source/drivers/net/wireless/iwlegacy/4965-mac.c
--- source.orig/drivers/net/wireless/iwlegacy/4965-mac.c	2016-01-10 23:01:32.000000000 +0000
+++ source/drivers/net/wireless/iwlegacy/4965-mac.c	2016-08-05 21:45:04.533469374 +0000
@@ -4706,7 +4706,7 @@
 
 	sprintf(il->firmware_name, "%s%s%s", name_pre, tag, ".ucode");
 
-	D_INFO("attempting to load firmware '%s'\n", il->firmware_name);
+	D_INFO("attempting to load firmware\n", il->firmware_name);
 
 	return request_firmware_nowait(THIS_MODULE, 1, il->firmware_name,
 				       &il->pci_dev->dev, GFP_KERNEL, il,
@@ -4797,7 +4797,7 @@
 
 	if (!ucode_raw) {
 		if (il->fw_idx <= il->cfg->ucode_api_max)
-			IL_ERR("request for firmware file '%s' failed.\n",
+			IL_ERR("request for firmware failed.\n",
 			       il->firmware_name);
 		goto try_again;
 	}
@@ -4827,16 +4827,13 @@
 	 * on the API version read from firmware header from here on forward
 	 */
 	if (api_ver < api_min || api_ver > api_max) {
-		IL_ERR("Driver unable to support your firmware API. "
-		       "Driver supports v%u, firmware is v%u.\n", api_max,
+		IL_ERR("Driver unable to support your firmware API.\n", api_max,
 		       api_ver);
 		goto try_again;
 	}
 
 	if (api_ver != api_max)
-		IL_ERR("Firmware has old API version. Expected v%u, "
-		       "got v%u. New firmware can be obtained "
-		       "from http://www.intellinuxwireless.org.\n", api_max,
+		IL_ERR("Firmware has old API version.\n", api_max,
 		       api_ver);
 
 	IL_INFO("loaded firmware version %u.%u.%u.%u\n",
